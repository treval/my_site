{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","handleHamburgerToggle","e","preventDefault","state","menuDisplay","setState","handleResize","windowHeight","window","innerHeight","windowWidth","innerWidth","this","addEventListener","removeEventListener","navButtons","className","onClick","alert","style","display","autoplay","id","visibility","href","placeholder","marginBottom","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0SAsHeA,G,wBAhHX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,sBAAwB,SAACC,GACrBA,EAAEC,iBAC2B,SAAzB,EAAKC,MAAMC,YACX,EAAKC,SAAS,CAACD,YAAa,UAE5B,EAAKC,SAAS,CAACD,YAAa,UAdjB,EAiBnBE,aAAe,kBAAM,EAAKD,SAAS,CAC/BE,aAAcC,OAAOC,YACrBC,YAAaF,OAAOG,cAjBpB,EAAKR,MAAQ,CACTI,aAAcC,OAAOC,YACrBC,YAAaF,OAAOG,WACpBP,YAAa,QALF,E,iFAuBfQ,KAAKN,eACLE,OAAOK,iBAAiB,SAAUD,KAAKN,gB,6CAIvCE,OAAOM,oBAAoB,SAAUF,KAAKN,gB,+BAGpC,IACFS,EADC,OAoBL,OAjBIA,EADAH,KAAKT,MAAMO,YAAc,IAEzB,yBAAKM,UAAU,wBACX,0BAAMA,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAApE,SACA,0BAAMF,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAApE,YACA,0BAAMF,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAApE,YAIJ,yBAAKF,UAAU,YAAYC,QAAS,SAAAhB,GAAC,OAAI,EAAKD,sBAAsBC,KAChE,yBAAKe,UAAU,uBACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,4BAAQG,MAAO,CAACC,QAASR,KAAKT,MAAMC,aAAcY,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAAhH,SACA,4BAAQC,MAAO,CAACC,QAASR,KAAKT,MAAMC,aAAcY,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAAhH,YACA,4BAAQC,MAAO,CAACC,QAASR,KAAKT,MAAMC,aAAcY,UAAU,aAAaC,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,0BAAhH,YAIJ,yBAAKF,UAAU,OAEX,yBAAKA,UAAU,UACX,0BAAMA,UAAU,gBAAhB,gBACCD,GAGL,yBAAKC,UAAU,yBACX,yBAAKA,UAAU,iBAGnB,yBAAKA,UAAU,mBAEX,uBAAGA,UAAU,mBAAb,ulBAIA,uBAAGA,UAAU,mBAAb,6wBAIA,uBAAGA,UAAU,mBAAb,0yBAMJ,yBAAKA,UAAU,sBACf,yCACA,kBAAC,IAAD,CAAUK,UAAQ,GACd,yBAAKC,GAAG,SACJ,wBAAIH,MAAO,CAACI,WAAY,WAAxB,MAEJ,yBAAKD,GAAG,SACJ,wBAAIH,MAAO,CAACI,WAAY,WAAxB,MAEJ,yBAAKD,GAAG,WACJ,wBAAIH,MAAO,CAACI,WAAY,YAAxB,qBAGR,8BACI,uBAAGP,UAAU,eAAeQ,KAAK,mCAAjC,WACA,uBAAGR,UAAU,eAAeQ,KAAK,wDAAjC,eACA,uBAAGR,UAAU,eAAeQ,KAAK,mDAAjC,qBAIJ,yBAAKR,UAAU,qBACX,yCACA,8BAAUA,UAAU,mBAAmBS,YAAY,6BACnD,6BACA,4BAAQN,MAAO,CAACO,aAAc,OAAQT,QAAS,SAAAhB,GAAIA,EAAEC,iBAAkBgB,MAAM,kEAA7E,iB,GAxGFS,IAAMC,YCOJC,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a7f9e2ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Carousel } from 'antd';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            windowHeight: window.innerHeight,\n            windowWidth: window.innerWidth,\n            menuDisplay: \"none\",\n        };\n    }\n\n    handleHamburgerToggle = (e) => {\n        e.preventDefault();\n        if (this.state.menuDisplay===\"none\")\n            this.setState({menuDisplay: \"block\"});\n        else \n            this.setState({menuDisplay: \"none\"});\n    }\n\n    handleResize = () => this.setState({\n        windowHeight: window.innerHeight,\n        windowWidth: window.innerWidth\n    });\n\n    componentDidMount() {\n        this.handleResize();\n        window.addEventListener('resize', this.handleResize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize)\n    }\n\n    render() {\n        let navButtons\n        if (this.state.windowWidth > 500) {\n            navButtons = \n            <div className='nav-button-container'>\n                <span className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>About</span>\n                <span className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>Projects</span>\n                <span className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>Contact</span>\n            </div>;\n        } else {\n            navButtons = \n            <div className='hamburger' onClick={e => this.handleHamburgerToggle(e)}>\n                <div className='hamburger-line-top'></div>\n                <div className='hamburger-line-middle'></div>\n                <div className='hamburger-line-bottom'></div>\n                <button style={{display: this.state.menuDisplay}} className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>About</button>\n                <button style={{display: this.state.menuDisplay}} className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>Projects</button>\n                <button style={{display: this.state.menuDisplay}} className='nav-button' onClick={e=>{e.preventDefault(); alert(\"not workin yeeeeeet!\")}}>Contact</button>\n            </div>;\n        }\n        return (\n            <div className=\"App\">\n\n                <div className='header'>\n                    <span className='header-title'>Trevor Levey</span>\n                    {navButtons}\n                </div>\n\n                <div className='profile-pic-container'>\n                    <div className='profile-pic'></div>\n                </div>\n\n                <div className='about-container'>\n\n                    <p className='cover-paragraph'> \n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sem odio, congue vel sem a, dignissim commodo leo. Donec maximus neque turpis, a tempus augue placerat at. Aliquam aliquam, risus et faucibus cursus, mauris dui laoreet felis, nec placerat lorem enim eu nisi. Morbi vitae lectus dignissim, rhoncus diam id, tempus sapien. Phasellus aliquam tortor sit amet libero ultrices finibus. Proin vel nisl non augue pellentesque venenatis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed ultricies magna. Vestibulum et hendrerit augue. Donec porta a justo gravida laoreet.\n                    </p>\n\n                    <p className='cover-paragraph'> \n                        Mauris pretium massa at risus eleifend, eget venenatis dui molestie. Praesent accumsan tristique ipsum, sed hendrerit neque volutpat elementum. Pellentesque sit amet imperdiet mi. Vivamus sagittis, magna et sagittis suscipit, metus urna viverra odio, in hendrerit mi nisl sed urna. Cras id quam ac dui accumsan pretium ut et ligula. Aenean vehicula, sapien vel consequat rhoncus, nulla lectus tincidunt felis, id volutpat tellus leo at nulla. Etiam porttitor, risus pretium tincidunt gravida, dui leo interdum eros, elementum ultricies tellus dolor non dolor. Suspendisse potenti. Phasellus placerat diam ut elementum convallis. Nulla eget cursus leo, eget porta neque. Curabitur eu volutpat erat, eu venenatis nisi. Aliquam hendrerit lobortis justo, id sodales elit rutrum ut.\n                    </p>\n\n                    <p className='cover-paragraph'> \n                        Nunc quis diam odio. In ut vestibulum sapien, id auctor justo. Nunc odio velit, luctus vitae lacus eu, malesuada blandit augue. Ut aliquam ex lacus, fringilla cursus diam rutrum id. Sed suscipit vehicula purus, a commodo massa dignissim id. Donec finibus bibendum erat, at porttitor nunc tincidunt at. Phasellus volutpat sollicitudin risus. Morbi dignissim ex at nisl semper pellentesque. Phasellus malesuada posuere viverra. Ut libero arcu, maximus vel tincidunt eu, iaculis volutpat lacus. Proin mollis, mi non ultrices posuere, lorem diam rutrum nisl, sit amet tempor diam tortor id lectus. Integer hendrerit luctus eros eu volutpat. Curabitur et neque augue. In fringilla condimentum volutpat. Nam fringilla augue nec eros auctor, at placerat turpis dapibus. Nunc malesuada consequat erat eu volutpat.\n                    </p>\n\n                </div>\n\n                <div className='projects-container'>\n                <p> Projects </p>\n                <Carousel autoplay>\n                    <div id=\"catan\">\n                        <h3 style={{visibility: 'hidden'}}>1</h3>\n                    </div>\n                    <div id=\"shiny\">\n                        <h3 style={{visibility: 'hidden'}}>1</h3>\n                    </div>\n                    <div id=\"coharie\">\n                        <h3 style={{visibility: 'visible'}}>COMP426 Project</h3>\n                    </div>\n                </Carousel>\n                <span>\n                    <a className='project-link' href=\"https://github.com/treval/Catan\">Catan |</a>\n                    <a className='project-link' href=\"https://treval.shinyapps.io/us_healthcare_costs_app/\">Shiny App |</a>\n                    <a className='project-link' href=\"https://github.com/treval/comp426_final_project\">COMP426 Project</a>\n                </span>\n                </div>\n\n                <div className='contact-container'>\n                    <p>e-mail me!</p>\n                    <textarea className='email-text-entry' placeholder=\"Type your e-mail here...\"></textarea>\n                    <br></br>\n                    <button style={{marginBottom: '5vh'}} onClick={e=>{e.preventDefault(); alert(\"You didn't really send me anything... this doesn't work yet.\")}}>E-Mail!</button>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}